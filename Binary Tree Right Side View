

Binary Tree Right Side View



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> view = new ArrayList<Integer>();
        Queue<TreeNode> queue = new LinkedList<>();

        if(root == null){
            return view;
        }

        queue.add(root);
        while(!queue.isEmpty()){
            Queue<TreeNode> next_level = new LinkedList<>();
            TreeNode last = null;
            while(!queue.isEmpty()){
                last = queue.poll();
                if(last.left != null){
                    next_level.add(last.left);
                }
                if(last.right != null){
                    next_level.add(last.right);
                }
            }
            queue = next_level;
            view.add(last.val);
        }
        return view;
    }
}
