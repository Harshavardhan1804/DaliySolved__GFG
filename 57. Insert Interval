57. Insert Interval



class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<int[]> result = new ArrayList<>();

        int n = intervals.length;
        int i = 0;
        while(i < n && newInterval[0] > intervals[i][0]){
            result.add(intervals[i]);
            i++;
        }

        if(result.isEmpty() || result.get(result.size()-1)[1] < newInterval[0]){
            result.add(newInterval);
        }
        else{
            result.get(result.size() - 1)[1] = Math.max(newInterval[1],result.get(result.size()-1)[1]); 
        }

        while(i < n){
            int start = intervals[i][0];
            int end = intervals[i][1];

            if(result.get(result.size()-1)[1] < start){
            result.add(intervals[i]);
        }
        else{
            result.get(result.size() - 1)[1] = Math.max(end,result.get(result.size()-1)[1]); 
        }
        i++;
        }

    return result.toArray(new int[result.size()][]);
    }
}
